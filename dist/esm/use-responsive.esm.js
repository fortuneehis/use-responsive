import{useState as e,useCallback as i,useEffect as n}from"react";var r=function(r){var t=r.min,o=void 0===t?0:t,h=r.max,d=void 0===h?1/0:h,w=r.direction,u=void 0===w?"horizontal":w,a=e((function(){return"undefined"!=typeof window?{width:window.innerWidth,height:window.innerHeight}:null})),f=a[0],c=a[1],l=e(!1),m=l[0],p=l[1],v=i((function(){if(f){if("horizontal"!==u&&"vertical"!==u)throw new Error("'direction' should either be 'horizontal' or 'vertical'");if("number"!=typeof o)throw new TypeError("The expected type of 'min' should be a number");if("number"!=typeof d)throw new TypeError("The expected type of 'max' should be a number");f["horizontal"===u?"width":"height"]>=o&&f["horizontal"===u?"width":"height"]<d?p(!0):p(!1)}}),[o,d,f,u]),b=i((function(){c({width:window.innerWidth,height:window.innerHeight})}),[]);return n((function(){return v(),window.addEventListener("resize",b),function(){window.removeEventListener("resize",b)}}),[v,b]),m},t=function(e){var i=e.min,n=e.max,t=e.direction,o=e.children;return r({min:i,max:n,direction:t})?o:null};export{t as Responsive,r as useResponsive};
//# sourceMappingURL=use-responsive.esm.js.map
